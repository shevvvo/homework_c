name: build
on: [push]

jobs:
  build:

    name: ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Install GTest
        run: sudo apt-get install libgtest-dev -y 

      - name: Install lcov
        run: sudo apt install lcov

      - name: Build
        run: mkdir build && cd build && cmake .. && make && cd ..

      - name: cppcheck install
        run: sudo apt update && sudo apt install cppcheck

      - name: cppcheck check
        run: cppcheck src tests  --enable=all --error-exitcode=1 -I include/ --suppress=missingIncludeSystem
        
      - name: cpplint install
        run: sudo apt-get install python
        
      - name: cpplint check
        run: python2.7 ./linters/cpplint/cpplint.py --extensions=c src/* include/*
        
      - name: clang-tidy install
        run: sudo apt install clang-tidy
        
      - name: clang-tidy check
        run: clang-tidy src/* -- -Iinclude/ -DMY_DEFINES ...
        
      - name: clang-format install
        run: sudo apt-get install clang-format
        
      - name: clang-format check
        run: clang-format -i src/*.c && clang-format -i include/*.h && clang-format -i tests/*.cpp
        
      - name: install scan-build
        run: sudo apt install clang-tools
        
      - name: data generate
        run: cd data && python3 data.py && cd ..
      
      - name: run tests with scan-build
        run: mkdir test_build && cd test_build && scan-build cmake .. && scan-build make && scan-build make test && lcov -t "hw-c" -o hw-c.info -c -d . && lcov --remove hw-c.info "/usr/include/*" "./include/*" "/usr/local/*" > coverage.info && genhtml -o report coverage.info
        
      - name: install fbinfer
        run: sudo apt-get install opam && git clone https://github.com/facebook/infer.git && cd infer && ./build-infer.sh -y clang && sudo make install && cd ..
        
      - name: run with fbinfer
        run: mkdir infer_build && cd infer_build && infer run -- make test
        
      - name: Install Valgrind
        run: sudo apt-get update && sudo apt-get install -y valgrind
       
      - name: Valgrind check
        run: mkdir valgrind_check && cd valgrind_check && cmake .. && make && valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all -s -q make test
      - name: coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: test_build/report
